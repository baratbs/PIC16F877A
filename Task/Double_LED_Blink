// PIC16F877A Configuration Bit Settings

// 'C' source line config statements

// CONFIG
#pragma config FOSC = EXTRC     // Oscillator Selection bits (RC oscillator)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = OFF      // Brown-out Reset Enable bit (BOR disabled)
#pragma config LVP = OFF        // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF         // Flash Program Memory Code Protection bit (Code protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#define _XTAL_FREQ 6000000
unsigned char value;  //Variable Declaration
void main() // main()function it's retuen type is NULL
{
    TRISC=0xBD; //set RC1 and RC6 bit as output
    while(1)    // It is an infinity Loop
    {
        PORTC=0x40; //set RC6 bit as 1 and RC1 bit as zero
        __delay_ms(3000); //Delay for one second
        PORTC=0x00; //set RC6 and RC1 bit as zero
        __delay_ms(3000);  //Delay for one second
        PORTC=0x02; //set RC6 bit as zero and RC1 bit as one
        __delay_ms(3000);  //Delay for one second
        PORTC=0x42; //set RC6 and RC1 both as one
        __delay_ms(3000);  //Delay for one second
    }
}


